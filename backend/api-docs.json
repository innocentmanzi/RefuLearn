{
  "openapi": "3.0.0",
  "info": {
    "title": "RefuLearn API",
    "description": "A comprehensive API for the RefuLearn platform supporting refugee education and skill development",
    "version": "1.0.0",
    "contact": {
      "name": "RefuLearn Team",
      "email": "support@refulearn.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    },
    {
      "url": "https://api.refulearn.com",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User ID"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "role": {
            "type": "string",
            "enum": ["refugee", "instructor", "admin", "employer"],
            "description": "User's role in the platform"
          },
          "profilePic": {
            "type": "string",
            "description": "URL to user's profile picture"
          },
          "country": {
            "type": "string",
            "description": "User's country"
          },
          "city": {
            "type": "string",
            "description": "User's city"
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Languages the user speaks"
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "User's skills"
          },
          "interests": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "User's interests"
          },
          "isEmailVerified": {
            "type": "boolean",
            "description": "Whether user's email is verified"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether user account is active"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Account creation date"
          }
        }
      },
      "Course": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Course ID"
          },
          "title": {
            "type": "string",
            "description": "Course title"
          },
          "description": {
            "type": "string",
            "description": "Course description"
          },
          "overview": {
            "type": "string",
            "description": "Detailed course overview"
          },
          "level": {
            "type": "string",
            "enum": ["Beginner", "Intermediate", "Advanced"],
            "description": "Course difficulty level"
          },
          "duration": {
            "type": "string",
            "description": "Course duration (e.g., '8 weeks')"
          },
          "category": {
            "type": "string",
            "description": "Course category"
          },
          "instructor_id": {
            "type": "string",
            "description": "Instructor ID"
          },
          "modules": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Course modules"
          },
          "learningObjectives": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Learning objectives"
          },
          "image": {
            "type": "string",
            "description": "Course image URL"
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether course is active"
          },
          "isPublished": {
            "type": "boolean",
            "description": "Whether course is published"
          },
          "course_profile_picture": {
            "type": "string",
            "format": "binary",
            "description": "Course profile picture"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Course creation date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Course last update date"
          }
        },
        "required": ["_id", "title", "category", "instructor_id", "is_active", "isPublished", "course_profile_picture"]
      },
      "Job": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Job ID"
          },
          "title": {
            "type": "string",
            "description": "Job title"
          },
          "description": {
            "type": "string",
            "description": "Job description"
          },
          "requirements": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Job requirements"
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Job responsibilities"
          },
          "company": {
            "type": "string",
            "description": "Company name"
          },
          "location": {
            "type": "string",
            "description": "Job location"
          },
          "salary": {
            "type": "object",
            "properties": {
              "min": {
                "type": "number",
                "description": "Minimum salary"
              },
              "max": {
                "type": "number",
                "description": "Maximum salary"
              },
              "currency": {
                "type": "string",
                "description": "Salary currency"
              }
            }
          },
          "type": {
            "type": "string",
            "enum": ["full-time", "part-time", "contract", "internship"],
            "description": "Employment type"
          },
          "category": {
            "type": "string",
            "description": "Job category"
          },
          "employer": {
            "$ref": "#/components/schemas/User"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether job posting is active"
          }
        }
      },
      "Scholarship": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Scholarship ID"
          },
          "title": {
            "type": "string",
            "description": "Scholarship title"
          },
          "description": {
            "type": "string",
            "description": "Scholarship description"
          },
          "provider": {
            "type": "string",
            "description": "Scholarship provider/organization"
          },
          "location": {
            "type": "string",
            "description": "Scholarship location"
          },
          "benefits": {
            "type": "string",
            "description": "Benefits offered by the scholarship"
          },
          "link": {
            "type": "string",
            "description": "Application link"
          },

          "deadline": {
            "type": "string",
            "format": "date-time",
            "description": "Application deadline"
          },
          "requirements": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Scholarship requirements"
          },
          "employer": {
            "type": "string",
            "description": "Employer ID who posted the scholarship"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether scholarship is active"
          },
          "daysRemaining": {
            "type": "integer",
            "description": "Days remaining until deadline"
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Application ID"
                },
                "applicant": {
                  "type": "string",
                  "description": "Applicant user ID"
                },
                "status": {
                  "type": "string",
                  "enum": ["pending", "accepted", "rejected", "shortlisted"],
                  "description": "Application status"
                },
                "appliedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Application date"
                },
                "essayReason": {
                  "type": "string",
                  "description": "Essay explaining why applying"
                },
                "cvDocument": {
                  "type": "string",
                  "description": "CV/Resume document"
                },
                "degreeDocument": {
                  "type": "string",
                  "description": "Degree certificate document"
                },
                "financialApproval": {
                  "type": "string",
                  "description": "Financial approval document"
                },
                "additionalDocuments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Additional supporting documents"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Legacy application documents (for backwards compatibility)"
                },
                "feedback": {
                  "type": "string",
                  "description": "Feedback on application"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update date"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "description": "Field name"
                },
                "message": {
                  "type": "string",
                  "description": "Field-specific error message"
                }
              }
            }
          }
        }
      },
      "Submission": {
        "type": "object",
        "properties": {
          "_id": { "type": "string", "description": "Submission ID" },
          "user": { "$ref": "#/components/schemas/User" },
          "course": { "$ref": "#/components/schemas/Course" },
          "assignment": { "$ref": "#/components/schemas/Assessment" },
          "fileUrl": { "type": "string", "description": "URL to submitted file" },
          "text": { "type": "string", "description": "Submitted text answer" },
          "grade": { "type": "number", "description": "Grade for the submission" },
          "feedback": { "type": "string", "description": "Instructor feedback" },
          "submittedAt": { "type": "string", "format": "date-time", "description": "Submission date" },
          "gradedAt": { "type": "string", "format": "date-time", "description": "Grading date" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "Certificate": {
        "type": "object",
        "properties": {
          "_id": { "type": "string", "description": "Certificate ID" },
          "student": { "$ref": "#/components/schemas/User" },
          "course": { "$ref": "#/components/schemas/Course" },
          "instructor": { "$ref": "#/components/schemas/User" },
          "certificateNumber": { "type": "string", "description": "Unique certificate number" },
          "title": { "type": "string", "description": "Certificate title" },
          "description": { "type": "string", "description": "Certificate description" },
          "issueDate": { "type": "string", "format": "date-time", "description": "Issue date" },
          "expiryDate": { "type": "string", "format": "date-time", "description": "Expiry date" },
          "status": { "type": "string", "enum": ["active", "expired", "revoked"], "description": "Certificate status" },
          "grade": { "type": "string", "description": "Grade achieved" },
          "score": { "type": "number", "description": "Score achieved" },
          "maxScore": { "type": "number", "description": "Maximum possible score" },
          "percentage": { "type": "number", "description": "Percentage achieved" },
          "completionDate": { "type": "string", "format": "date-time", "description": "Course completion date" },
          "certificateUrl": { "type": "string", "description": "URL to certificate file" },
          "verificationCode": { "type": "string", "description": "Unique verification code" },
          "isVerified": { "type": "boolean", "description": "Whether certificate is verified" },
          "verifiedAt": { "type": "string", "format": "date-time", "description": "Verification date" },
          "verifiedBy": { "$ref": "#/components/schemas/User" },
          "achievements": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": { "type": "string" },
                "description": { "type": "string" },
                "date": { "type": "string", "format": "date-time" }
              }
            }
          },
          "skills": {
            "type": "array",
            "items": { "type": "string" }
          },
          "metadata": {
            "type": "object",
            "properties": {
              "courseDuration": { "type": "string" },
              "totalModules": { "type": "number" },
              "completedModules": { "type": "number" },
              "totalAssessments": { "type": "number" },
              "passedAssessments": { "type": "number" },
              "timeSpent": { "type": "number" }
            }
          },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "Module": {
        "type": "object",
        "properties": {
          "_id": { "type": "string", "description": "Module ID" },
          "title": { "type": "string", "description": "Module title" },
          "description": { "type": "string", "description": "Module description" },
          "courseId": { "type": "string", "description": "Course ID this module belongs to" },
          "order": { "type": "integer", "description": "Module order in the course" },
          "content": { "type": "string", "format": "binary", "description": "Upload a file or input a link for the module content, depending on content_type." },
          "duration": { "type": "string", "description": "Estimated module duration" },
          "isActive": { "type": "boolean", "description": "Whether module is active" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "Assessment": {
        "type": "object",
        "properties": {
          "_id": { "type": "string", "description": "Assessment ID" },
          "title": { "type": "string", "description": "Assessment title" },
          "description": { "type": "string", "description": "Assessment description" },
          "courseId": { "type": "string", "description": "Course ID this assessment belongs to" },
          "moduleId": { "type": "string", "description": "Module ID this assessment belongs to" },
          "type": { "type": "string", "enum": ["quiz", "assignment", "exam"], "description": "Assessment type" },
          "questions": { "type": "array", "items": { "type": "object" }, "description": "Assessment questions" },
          "maxScore": { "type": "number", "description": "Maximum possible score" },
          "passingScore": { "type": "number", "description": "Minimum score to pass" },
          "timeLimit": { "type": "integer", "description": "Time limit in minutes" },
          "isActive": { "type": "boolean", "description": "Whether assessment is active" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "UserAssessment": {
        "type": "object",
        "properties": {
          "_id": { "type": "string", "description": "User assessment ID" },
          "user": { "oneOf": [{ "type": "number" }, { "type": "string" }], "description": "User ID" },
          "assessment": { "type": "number", "description": "Assessment ID" },
          "attempt_number": { "type": "number", "description": "Attempt number for this assessment" },
          "answers": { 
            "type": "array", 
            "items": { 
              "type": "object",
              "properties": {
                "question": { "type": "string", "description": "Question text" },
                "answer": { "type": "string", "description": "User's answer" }
              },
              "required": ["question", "answer"]
            },
            "description": "Array of question-answer pairs"
          },
          "score": { "type": "number", "description": "Score for the assessment" },
          "passed": { "type": "boolean", "description": "Whether the user passed the assessment" },
          "completed_at": { "type": "string", "format": "date-time", "description": "Completion date" },
          "time_taken": { "type": "number", "description": "Time taken to complete in seconds" }
        },
        "required": ["user", "assessment", "attempt_number", "answers", "score", "passed", "completed_at", "time_taken"]
      },
      "UserProgress": {
        "type": "object",
        "properties": {
          "_id": { "type": "string", "description": "User progress ID" },
          "user": { "$ref": "#/components/schemas/User" },
          "course": { "$ref": "#/components/schemas/Course" },
          "module": { "$ref": "#/components/schemas/Module" },
          "progress": { "type": "number", "description": "Progress percentage" },
          "completed": { "type": "boolean", "description": "Whether the module has been completed" },
          "completedAt": { "type": "string", "format": "date-time", "description": "Completion date" }
        }
      },
      "Question": {
        "type": "object",
        "properties": {
          "_id": { "type": "string", "description": "Question ID" },
          "assessment": { "type": "integer", "description": "Assessment ID" },
          "course": { "type": "string", "description": "Course ID" },
          "module": { "type": "string", "description": "Module ID" },
          "question": { "type": "string", "description": "Question text" },
          "question_type": { "type": "string", "description": "Type of question (e.g., Multiple Choice, True/False, etc.)" },
          "options": { "type": "array", "items": { "type": "string" }, "description": "Question options" },
          "correct_answer": { "type": "string", "description": "Correct answer" },
          "points": { "type": "integer", "description": "Points for the question" },
          "order": { "type": "integer", "description": "Order of the question in the assessment" }
        }
      },
      "Discussion": {
        "type": "object",
        "properties": {
          "_id": { "type": "string", "description": "Discussion ID" },
          "course": { "type": "string", "description": "Course ID" },
          "title": { "type": "string", "description": "Discussion title" },
          "content": { "type": "string", "description": "Discussion content" },
          "createdAt": { "type": "string", "format": "date-time", "description": "Discussion creation date" },
          "updatedAt": { "type": "string", "format": "date-time", "description": "Discussion last update date" }
        }
      },
      "HelpTicketCreate": {
        "type": "object",
        "required": ["title", "description", "category", "priority"],
        "properties": {
          "title": { "type": "string", "description": "Title of the help ticket" },
          "description": { "type": "string", "description": "Description of the issue" },
          "category": { 
            "type": "string",
            "enum": ["technical", "account", "course", "payment", "general"],
            "description": "Category of the help ticket"
          },
          "priority": { 
            "type": "string",
            "enum": ["low", "medium", "high", "urgent"],
            "description": "Priority level of the help ticket"
          },
          "assignedTo": { 
            "type": "string",
            "enum": ["instructor", "admin", "employer"],
            "description": "Role to assign the ticket to (optional)"
          },
          "attachments": { 
            "type": "array",
            "items": { "type": "string", "format": "binary" },
            "description": "Optional file attachments"
          }
        }
      },
      "HelpTicketUpdate": {
        "type": "object",
        "properties": {
          "title": { "type": "string", "description": "Title of the help ticket" },
          "description": { "type": "string", "description": "Description of the issue" },
          "category": { 
            "type": "string",
            "enum": ["technical", "account", "course", "payment", "general"],
            "description": "Category of the help ticket"
          },
          "priority": { 
            "type": "string",
            "enum": ["low", "medium", "high", "urgent"],
            "description": "Priority level of the help ticket"
          },
          "status": { 
            "type": "string",
            "enum": ["open", "in-progress", "resolved", "closed"],
            "description": "Status of the help ticket"
          },
          "assignedTo": { 
            "type": "string",
            "enum": ["instructor", "admin", "employer"],
            "description": "Role to assign the ticket to (optional)"
          },
          "attachments": { 
            "type": "array",
            "items": { "type": "string", "format": "binary" },
            "description": "Optional file attachments"
          }
        }
      },
      "HelpTicketResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "message": { "type": "string" },
          "data": {
            "type": "object",
            "properties": {
              "ticket": { "type": "object" }
            }
          }
        }
      },
      "HelpTicketsListResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "data": {
            "type": "object",
            "properties": {
              "tickets": {
                "type": "array",
                "items": { "type": "object" }
              }
            }
          }
        }
      }
    }
    },
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "description": "Check if the API is running",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "RefuLearn API is running"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": ["auth"],
        "summary": "Register a new user",
        "description": "Create a new user account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["firstName", "lastName", "email", "password", "confirmPassword", "role"],
                "properties": {
                  "firstName": { "type": "string", "minLength": 2, "maxLength": 50 },
                  "lastName": { "type": "string", "minLength": 2, "maxLength": 50 },
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "minLength": 8 },
                  "confirmPassword": { "type": "string", "minLength": 8 },
                  "role": { "type": "string", "enum": ["refugee", "instructor", "employer"], "description": "User's role in the platform" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "User registered successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": { "$ref": "#/components/schemas/User" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": { "description": "Bad request", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "Login user",
        "description": "Authenticate user and return access and refresh tokens",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Login successful" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": { "$ref": "#/components/schemas/User" },
                        "access_token": { "type": "string", "description": "JWT access token" },
                        "refresh_token": { "type": "string", "description": "JWT refresh token" }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Invalid credentials", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": ["auth"],
        "summary": "Get current user",
        "description": "Get the current authenticated user's profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["auth"],
        "summary": "Logout user (refresh token)",
        "description": "Logs out the user by invalidating the refresh token. Requires a JSON body with 'refresh_token'. After logout, the frontend should clear the access token and Authorization header.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": { "type": "string", "description": "Refresh token to be invalidated" }
                },
                "required": ["refresh_token"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Logged out successfully" },
          "400": { "description": "Refresh token is required or invalid" }
        }
      }
    },
    "/api/auth/verify-otp": {
      "post": {
        "tags": ["auth"],
        "summary": "Verify OTP",
        "description": "Verify the user's email using the OTP sent to their email address.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "otp"],
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "otp": { "type": "string", "minLength": 6, "maxLength": 6 }
                }
              },
              "example": {
                "email": "user@example.com",
                "otp": "123456"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Verification email is successful." },
          "400": { "description": "Invalid OTP or email." }
        }
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "tags": ["auth"],
        "summary": "Forgot password",
        "description": "Send a password reset email to the user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": { "type": "string", "format": "email" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Password reset email sent" }
        }
      }
    },
    "/api/auth/reset-password/{token}": {
      "post": {
        "tags": ["auth"],
        "summary": "Reset password",
        "description": "Reset the user's password using a reset token",
        "parameters": [
          { "name": "token", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["password"],
                "properties": {
                  "password": { "type": "string", "minLength": 8 }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Password reset successful" },
          "400": { "description": "Invalid or expired reset token" }
        }
      }
    },
    "/api/auth/change-password": {
      "post": {
        "tags": ["auth"],
        "summary": "Change password",
        "description": "Change the current user's password",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["old_password", "new_password", "confirm_new_password"],
                "properties": {
                  "old_password": { "type": "string" },
                  "new_password": { "type": "string", "minLength": 8 },
                  "confirm_new_password": { "type": "string", "minLength": 8 }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Password changed successfully" },
          "400": { "description": "Current password is incorrect or passwords do not match" }
        }
      }
    },
    "/api/auth/settings": {
      "get": {
        "tags": ["auth"],
        "summary": "Get user settings",
        "description": "Retrieve the settings for the authenticated user.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "User settings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "settings": {
                          "type": "object",
                          "properties": {
                            "email": { "type": "string" },
                            "language": { "type": "string", "enum": ["en", "fr", "rw", "sw"] },
                            "timezone": { "type": "string" },
                            "notifications": {
                              "type": "object",
                              "properties": {
                                "email": { "type": "boolean" },
                                "push": { "type": "boolean" },
                                "sms": { "type": "boolean" },
                                "courseUpdates": { "type": "boolean" },
                                "newMessages": { "type": "boolean" },
                                "jobAlerts": { "type": "boolean" },
                                "newsletter": { "type": "boolean" }
                              }
                            },
                            "privacy": {
                              "type": "object",
                              "properties": {
                                "profileVisibility": { "type": "string", "enum": ["public", "private"] },
                                "showEmail": { "type": "boolean" },
                                "showPhone": { "type": "boolean" },
                                "allowMessages": { "type": "boolean" }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": { "description": "User not found" }
        }
      },
      "put": {
        "tags": ["auth"],
        "summary": "Update user settings",
        "description": "Update the settings for the authenticated user.",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "language": { "type": "string", "enum": ["en", "fr", "rw", "sw"] },
                  "timezone": { "type": "string" },
                  "notifications": {
                    "type": "object",
                    "properties": {
                      "email": { "type": "boolean" },
                      "push": { "type": "boolean" },
                      "sms": { "type": "boolean" },
                      "courseUpdates": { "type": "boolean" },
                      "newMessages": { "type": "boolean" },
                      "jobAlerts": { "type": "boolean" },
                      "newsletter": { "type": "boolean" }
                    }
                  },
                  "privacy": {
                    "type": "object",
                    "properties": {
                      "profileVisibility": { "type": "string", "enum": ["public", "private"] },
                      "showEmail": { "type": "boolean" },
                      "showPhone": { "type": "boolean" },
                      "allowMessages": { "type": "boolean" }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Settings updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "settings": { "type": "object" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": { "description": "Invalid settings data" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "summary": "Refresh JWT token",
        "description": "Refresh the JWT token for the current user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "description": "The refresh token"
                  }
                },
                "required": ["refreshToken"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens refreshed"
          }
        }
      }
    },
    "/api/auth/profile/{userId}": {
      "patch": {
        "tags": ["auth"],
        "summary": "Update user profile",
        "description": "Update the profile of the specified user.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "bio": { "type": "string" },
                  "phone_number": { "type": "string" },
                  "dob": { "type": "string", "format": "date" },
                  "profile_picture": { "type": "string", "format": "binary" },
                  "language_preference": { "type": "string" },
                  "gender": { "type": "string" },
                  "education_level": { "type": "string" },
                  "camp": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Profile updated successfully" },
                    "data": { "$ref": "#/components/schemas/User" }
                  }
                }
              }
            }
          },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/api/auth/users": {
      "get": {
        "tags": ["auth"],
        "summary": "List all users",
        "description": "Get a list of all users (admin only)",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Users retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/auth/users/{userId}": {
      "get": {
        "tags": ["auth"],
        "summary": "Get user by ID",
        "description": "Get a user by their ID (admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "userId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "User retrieved successfully" },
          "404": { "description": "User not found" }
        }
      },
      "put": {
        "tags": ["auth"],
        "summary": "Update user",
        "description": "Update a user by their ID (admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "userId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": { "type": "string" },
                  "lastName": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "role": { "type": "string", "enum": ["refugee", "instructor", "admin", "employer"] }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "User updated successfully" },
          "404": { "description": "User not found" }
        }
      },
      "delete": {
        "tags": ["auth"],
        "summary": "Delete user",
        "description": "Delete a user by their ID (admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "userId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "User deleted successfully" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/api/courses": {
      "get": {
        "tags": ["courses"],
        "summary": "Get all courses",
        "description": "Retrieve a list of courses with optional filtering",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of courses per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter by category",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "level",
            "in": "query",
            "description": "Filter by level",
            "schema": {
              "type": "string",
              "enum": ["Beginner", "Intermediate", "Advanced"]
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search term",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Courses retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "courses": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Course"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "integer"
                            },
                            "limit": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            },
                            "pages": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["courses"],
        "summary": "Create a course",
        "description": "Create a new course (instructor/admin only)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string", "allowEmptyValue": true },
                  "category": { "type": "string", "allowEmptyValue": true },
                  "description": { "type": "string", "allowEmptyValue": true },
                  "instructor_id": { "type": "string", "allowEmptyValue": true },
                  "duration": { "type": "string", "allowEmptyValue": true },
                  "difficult_level": { "type": "string", "enum": ["Beginner", "Intermediate", "Advanced", "Expert"], "allowEmptyValue": true },
                  "is_active": { "type": "boolean", "allowEmptyValue": true },
                  "course_profile_picture": { "type": "string", "format": "binary", "allowEmptyValue": true }
                },
                "required": [
                  "title", "category", "description", "instructor_id",
                  "duration", "difficult_level", "is_active", "course_profile_picture"
                ]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Course created successfully" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/api/courses/{id}": {
      "get": {
        "tags": ["courses"],
        "summary": "Get course by ID",
        "description": "Retrieve a specific course by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Course ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "course": {
                          "$ref": "#/components/schemas/Course"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Course not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["courses"],
        "summary": "Update a course",
        "description": "Update an existing course. The 'id' path parameter must be the course _id (get it from GET /courses).",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The _id of the course to update (from GET /courses)",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "category": { "type": "string" },
                  "description": { "type": "string" },
                  "instructor_id": { "type": "string" },
                  "duration": { "type": "string" },
                  "difficult_level": { "type": "string", "enum": ["Beginner", "Intermediate", "Advanced", "Expert"] },
                  "is_active": { "type": "boolean" },
                  "isPublished": { "type": "boolean" },
                  "course_profile_picture": { "type": "string", "format": "binary" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Course updated successfully" },
          "400": { "description": "Bad request" },
          "404": { "description": "Course not found" }
        }
      },
      "delete": {
        "tags": ["courses"],
        "summary": "Delete course",
        "description": "Delete a course by its ID (instructor/admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Course deleted successfully" },
          "404": { "description": "Course not found" }
        }
      }
    },
    "/api/jobs": {
      "get": {
        "tags": ["jobs"],
        "summary": "Get all jobs",
        "description": "Retrieve a list of job postings with optional filtering",
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer", "default": 1 } },
          { "name": "limit", "in": "query", "schema": { "type": "integer", "default": 10 } },
          { "name": "category", "in": "query", "schema": { "type": "string" } },
          { "name": "location", "in": "query", "schema": { "type": "string" } },
          { "name": "type", "in": "query", "schema": { "type": "string", "enum": ["full-time", "part-time", "contract", "internship"] } },
          { "name": "search", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Jobs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "jobs": { "type": "array", "items": { "$ref": "#/components/schemas/Job" } },
                        "pagination": { "type": "object" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["jobs"],
        "summary": "Create a job",
        "description": "Create a new job posting (employer only)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "location": { "type": "string" },
                  "job_type": { "type": "string", "enum": ["Full Time", "Part Time", "Contract", "Internship"] },
                  "required_skills": { "type": "array", "items": { "type": "string" } },
                  "salary_range": { "type": "string" },
                  "application_deadline": { "type": "string", "format": "date-time" },
                  "is_active": { "type": "boolean" },
                  "remote_work": { "type": "boolean" }
                },
                "required": [
                  "title", "description", "location", "job_type", "required_skills", "salary_range", "application_deadline", "is_active", "remote_work"
                ]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Job created successfully" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/api/jobs/{jobId}": {
      "get": {
        "tags": ["jobs"],
        "summary": "Get job by ID",
        "description": "Retrieve a job posting by its ID",
        "parameters": [
          { "name": "jobId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Job retrieved successfully" },
          "404": { "description": "Job not found" }
        }
      },
      "put": {
        "tags": ["jobs"],
        "summary": "Update job",
        "description": "Update a job posting (employer/admin only). Only the employer who created the job (job.employer == user._id) or an admin can update the job.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "jobId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "location": { "type": "string" },
                  "job_type": { "type": "string", "enum": ["Full Time", "Part Time", "Contract", "Internship"] },
                  "required_skills": { "type": "array", "items": { "type": "string" } },
                  "salary_range": { "type": "string" },
                  "application_deadline": { "type": "string", "format": "date-time" },
                  "is_active": { "type": "boolean" },
                  "remote_work": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Job updated successfully" },
          "400": { "description": "Bad request" },
          "404": { "description": "Job not found" },
          "403": { "description": "Not authorized to update this job" }
        }
      },
      "delete": {
        "tags": ["jobs"],
        "summary": "Delete job",
        "description": "Delete a job posting (employer/admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "jobId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Job deleted successfully" },
          "404": { "description": "Job not found" }
        }
      }
    },
    "/api/jobs/employer/jobs": {
      "get": {
        "tags": ["jobs"],
        "summary": "Get employer's jobs",
        "description": "Retrieve all jobs posted by the authenticated employer",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Jobs retrieved successfully" }
        }
      }
    },
    "/api/jobs/{jobId}/apply": {
      "post": {
        "tags": ["jobs"],
        "summary": "Apply for job",
        "description": "Apply for a job posting. Upload cover letter and resume as document files (PDF, DOC, DOCX, TXT). Expected salary is optional. Available to refugees, users, employers, and admins.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "jobId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "coverLetter": { 
                    "type": "string", 
                    "format": "binary",
                    "description": "Cover letter document file (PDF, DOC, DOCX, TXT)"
                  },
                  "resume": { 
                    "type": "string", 
                    "format": "binary",
                    "description": "Resume document file (PDF, DOC, DOCX, TXT)"
                  },
                  "expectedSalary": { 
                    "type": "number",
                    "description": "Expected salary (optional)"
                  }
                },
                "required": ["coverLetter", "resume"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Application submitted successfully" },
          "400": { "description": "Bad request" },
          "404": { "description": "Job not found" }
        }
      }
    },
    "/api/jobs/applications/user": {
      "get": {
        "tags": ["jobs"],
        "summary": "Get all job applications",
        "description": "Retrieve all job applications submitted by all users on the platform. Available to employers and admins only. Refugees and regular users cannot access this endpoint.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "All applications retrieved successfully" },
          "403": { "description": "Forbidden - Only employers and admins can access this endpoint" }
        }
      }
    },
    "/api/jobs/{jobId}/applications": {
      "get": {
        "tags": ["jobs"],
        "summary": "Get job applications",
        "description": "Retrieve all applications for a specific job. Available to all employers and admins (not restricted to job owner).",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "jobId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Applications retrieved successfully" },
          "404": { "description": "Job not found" },
          "403": { "description": "Forbidden - Only employers and admins can access this endpoint" }
        }
      }
    },
    "/api/jobs/{jobId}/applications/{applicationId}": {
      "put": {
        "tags": ["jobs"],
        "summary": "Update application status",
        "description": "Update the status of a job application using the dropdown status selector. Available to all employers and admins (not restricted to job owner).",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "jobId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "applicationId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": { 
                    "type": "string", 
                    "enum": ["pending", "reviewed", "shortlisted", "rejected", "hired", "closed"],
                    "description": "Select application status",
                    "example": "reviewed"
                  },
                  "notes": { 
                    "type": "string",
                    "description": "Optional notes about the status change",
                    "example": "Candidate looks promising"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Application status updated successfully" },
          "404": { "description": "Application not found" },
          "403": { "description": "Forbidden - Only employers and admins can access this endpoint" }
        }
      }
    },
    "/api/jobs/{jobId}/analytics": {
      "get": {
        "tags": ["jobs"],
        "summary": "Get job analytics",
        "description": "Retrieve analytics for a specific job. Available to all employers and admins (not restricted to job owner).",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "jobId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Analytics retrieved successfully" },
          "404": { "description": "Job not found" },
          "403": { "description": "Not authorized" }
        }
      }
    },
    "/api/jobs/debug/all-jobs": {
      "get": {
        "tags": ["jobs"],
        "summary": "DEBUG: Get all jobs with employer info",
        "description": "Diagnostic endpoint to see all jobs and their employer field status (employer/admin only). Use this to debug why employer jobs endpoint returns empty results.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "All jobs with diagnostic information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalJobs": { "type": "integer" },
                        "currentUser": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string" },
                            "idString": { "type": "string" },
                            "role": { "type": "string" }
                          }
                        },
                        "jobs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": { "type": "string" },
                              "title": { "type": "string" },
                              "employer": { "type": "string" },
                              "employerType": { "type": "string" },
                              "hasEmployer": { "type": "boolean" },
                              "currentUserId": { "type": "string" },
                              "currentUserIdString": { "type": "string" },
                              "matches": { "type": "boolean" }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/jobs/debug/applications": {
      "get": {
        "tags": ["jobs"],
        "summary": "DEBUG: Check applications data",
        "description": "Diagnostic endpoint to see all job applications data for debugging purposes (employer/admin only). Shows which jobs have applications and user's application status.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Applications debug information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "currentUserId": { "type": "string" },
                        "totalJobs": { "type": "integer" },
                        "jobs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": { "type": "string" },
                              "title": { "type": "string" },
                              "hasApplications": { "type": "boolean" },
                              "applicationsCount": { "type": "integer" },
                              "applications": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "_id": { "type": "string" },
                                    "applicant": { "type": "string" },
                                    "coverLetter": { "type": "string" },
                                    "resume": { "type": "string" },
                                    "status": { "type": "string" },
                                    "appliedAt": { "type": "string", "format": "date-time" },
                                    "expectedSalary": { "type": "number" }
                                  }
                                }
                              },
                              "myApplications": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "_id": { "type": "string" },
                                    "applicant": { "type": "string" },
                                    "coverLetter": { "type": "string" },
                                    "resume": { "type": "string" },
                                    "status": { "type": "string" },
                                    "appliedAt": { "type": "string", "format": "date-time" },
                                    "expectedSalary": { "type": "number" }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": { "description": "Not authorized" }
        }
      }
    },
    "/api/jobs/admin/fix-employer-field": {
      "post": {
        "tags": ["jobs"],
        "summary": "UTILITY: Fix jobs missing employer field",
        "description": "Utility to assign employer field to jobs that are missing it (admin/employer). Employers can only assign jobs to themselves.",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["employerId", "jobIds"],
                "properties": {
                  "employerId": {
                    "type": "string",
                    "description": "The employer user ID to assign to the jobs"
                  },
                  "jobIds": {
                    "type": "array",
                    "items": { "type": "string" },
                    "description": "Array of job IDs to update"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fix operation completed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "jobId": { "type": "string" },
                              "status": { "type": "string", "enum": ["updated", "already-has-employer", "error"] },
                              "title": { "type": "string" },
                              "employer": { "type": "string" },
                              "error": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/api/jobs/fix-my-jobs": {
      "post": {
        "tags": ["jobs"],
        "summary": "UTILITY: Fix employer's own jobs",
        "description": "Fix jobs that are missing employer field by assigning them to the current user (employer/admin only). This automatically finds and fixes all jobs with undefined/missing employer field.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Fix operation completed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "jobId": { "type": "string" },
                              "status": { "type": "string", "enum": ["updated", "error"] },
                              "title": { "type": "string" },
                              "assignedTo": { "type": "string" },
                              "error": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/scholarships": {
      "get": {
        "tags": ["jobs"],
        "summary": "Get all scholarships",
        "description": "Retrieve a list of all active scholarships with optional filtering",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of scholarships per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            }
          },

          {
            "name": "deadline",
            "in": "query",
            "description": "Filter by deadline (ISO8601 format)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search term for title, description, provider, or location",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Scholarships retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "scholarships": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Scholarship"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "currentPage": {
                              "type": "integer"
                            },
                            "totalPages": {
                              "type": "integer"
                            },
                            "totalScholarships": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["jobs"],
        "summary": "Create a new scholarship",
        "description": "Create a new scholarship posting (employer/admin only)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title", "description", "provider", "location", "benefits", "link", "deadline"],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Scholarship title"
                  },
                  "description": {
                    "type": "string",
                    "description": "Scholarship description"
                  },
                  "provider": {
                    "type": "string",
                    "description": "Scholarship provider/organization"
                  },
                  "location": {
                    "type": "string",
                    "description": "Scholarship location"
                  },
                  "benefits": {
                    "type": "string",
                    "description": "Benefits offered by the scholarship"
                  },
                  "link": {
                    "type": "string",
                    "description": "Application link"
                  },
                  "deadline": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Application deadline"
                  },
                  "requirements": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Scholarship requirements"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Whether scholarship is active",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Scholarship created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Scholarship created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "scholarship": {
                          "$ref": "#/components/schemas/Scholarship"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation errors"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          }
        }
      }
    },
    "/api/scholarships/{scholarshipId}": {
      "get": {
        "tags": ["jobs"],
        "summary": "Get scholarship by ID",
        "description": "Retrieve a specific scholarship by its ID",
        "parameters": [
          {
            "name": "scholarshipId",
            "in": "path",
            "required": true,
            "description": "Scholarship ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Scholarship retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "scholarship": {
                          "$ref": "#/components/schemas/Scholarship"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Scholarship not found"
          }
        }
      },
      "put": {
        "tags": ["jobs"],
        "summary": "Update scholarship",
        "description": "Update a scholarship posting (employer/admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "scholarshipId",
            "in": "path",
            "required": true,
            "description": "Scholarship ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Scholarship title"
                  },
                  "description": {
                    "type": "string",
                    "description": "Scholarship description"
                  },
                  "provider": {
                    "type": "string",
                    "description": "Scholarship provider/organization"
                  },
                  "location": {
                    "type": "string",
                    "description": "Scholarship location"
                  },
                  "benefits": {
                    "type": "string",
                    "description": "Benefits offered by the scholarship"
                  },
                  "link": {
                    "type": "string",
                    "description": "Application link"
                  },
                  "deadline": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Application deadline"
                  },
                  "requirements": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Scholarship requirements"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Whether scholarship is active"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Scholarship updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Scholarship updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "scholarship": {
                          "$ref": "#/components/schemas/Scholarship"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation errors"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Scholarship not found"
          }
        }
      },
      "delete": {
        "tags": ["jobs"],
        "summary": "Delete scholarship",
        "description": "Delete a scholarship posting (employer/admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "scholarshipId",
            "in": "path",
            "required": true,
            "description": "Scholarship ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Scholarship deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Scholarship deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Scholarship not found"
          }
        }
      }
    },
    "/api/scholarships/employer/scholarships": {
      "get": {
        "tags": ["jobs"],
        "summary": "Get employer's scholarships",
        "description": "Retrieve scholarships posted by the current employer",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of scholarships per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status",
            "schema": {
              "type": "string",
              "enum": ["active", "inactive"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employer scholarships retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "scholarships": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Scholarship"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "integer"
                            },
                            "limit": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            },
                            "pages": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          }
        }
      }
    },
    "/api/scholarships/{scholarshipId}/apply": {
      "post": {
        "tags": ["jobs"],
        "summary": "Apply for scholarship",
        "description": "Apply for a scholarship",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "scholarshipId",
            "in": "path",
            "required": true,
            "description": "Scholarship ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["essayReason", "cvDocument", "degreeDocument", "financialApproval"],
                "properties": {
                  "essayReason": {
                    "type": "string",
                    "description": "Essay explaining why you are applying for this scholarship"
                  },
                  "cvDocument": {
                    "type": "string",
                    "format": "binary",
                    "description": "CV/Resume document file"
                  },
                  "degreeDocument": {
                    "type": "string",
                    "format": "binary",
                    "description": "Degree/Education certificate document file"
                  },
                  "financialApproval": {
                    "type": "string",
                    "format": "binary",
                    "description": "Financial approval/need document file"
                  },
                  "additionalDocuments": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Additional supporting document files (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Application submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Application submitted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - already applied or scholarship not active"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Scholarship not found"
          }
        }
      }
    },
    "/api/scholarships/debug/user-applications": {
      "get": {
        "tags": ["jobs"],
        "summary": "Debug user applications",
        "description": "Debug endpoint to check user applications and troubleshoot issues",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Debug information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "currentUserId": { "type": "string" },
                    "currentUserRole": { "type": "string" },
                    "totalScholarships": { "type": "number" },
                    "scholarshipsWithApplications": { "type": "number" },
                    "allApplications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "scholarshipId": { "type": "string" },
                          "scholarshipTitle": { "type": "string" },
                          "applications": { "type": "array" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/scholarships/applications/user": {
      "get": {
        "tags": ["jobs"],
        "summary": "Get all scholarship applications",
        "description": "Retrieve all scholarship applications from all users (employer/admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of applications per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All scholarship applications retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "applications": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "scholarship": {
                                "$ref": "#/components/schemas/Scholarship"
                              },
                              "application": {
                                "type": "object",
                                "properties": {
                                  "_id": { "type": "string" },
                                  "applicant": { "type": "string" },
                                  "status": { "type": "string" },
                                  "appliedAt": { "type": "string", "format": "date-time" },
                                  "essayReason": { "type": "string" },
                                  "cvDocument": { "type": "string" },
                                  "degreeDocument": { "type": "string" },
                                  "financialApproval": { "type": "string" },
                                  "additionalDocuments": { "type": "array", "items": { "type": "string" } },
                                  "documents": { "type": "array", "items": { "type": "string" } },
                                  "feedback": { "type": "string" }
                                }
                              }
                            }
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "currentPage": { "type": "integer" },
                            "totalPages": { "type": "integer" },
                            "totalApplications": { "type": "integer" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Only employers and admins can access this endpoint"
          }
        }
      }
    },
    "/api/scholarships/{scholarshipId}/applications": {
      "get": {
        "tags": ["jobs"],
        "summary": "Get scholarship applications",
        "description": "Retrieve applications for a specific scholarship (employer/admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "scholarshipId",
            "in": "path",
            "required": true,
            "description": "Scholarship ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of applications per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by application status",
            "schema": {
              "type": "string",
              "enum": ["pending", "accepted", "rejected", "shortlisted"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Applications retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "applications": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": { "type": "string" },
                              "applicant": { "type": "string" },
                              "status": { "type": "string" },
                              "appliedAt": { "type": "string", "format": "date-time" },
                              "essayReason": { "type": "string" },
                              "cvDocument": { "type": "string" },
                              "degreeDocument": { "type": "string" },
                              "financialApproval": { "type": "string" },
                              "additionalDocuments": { "type": "array", "items": { "type": "string" } },
                              "documents": { "type": "array", "items": { "type": "string" } },
                              "feedback": { "type": "string" },
                              "user": {
                                "type": "object",
                                "properties": {
                                  "_id": { "type": "string" },
                                  "firstName": { "type": "string" },
                                  "lastName": { "type": "string" },
                                  "email": { "type": "string" },
                                  "profilePic": { "type": "string" }
                                }
                              }
                            }
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": { "type": "integer" },
                            "limit": { "type": "integer" },
                            "total": { "type": "integer" },
                            "pages": { "type": "integer" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Scholarship not found"
          }
        }
      }
    },
    "/api/scholarships/{scholarshipId}/applications/{applicationId}": {
      "put": {
        "tags": ["jobs"],
        "summary": "Update application status",
        "description": "Update the status of a scholarship application (employer/admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "scholarshipId",
            "in": "path",
            "required": true,
            "description": "Scholarship ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "description": "Application ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["pending", "accepted", "rejected", "shortlisted", "reviewed", "hired", "closed"],
                    "description": "New application status"
                  },
                  "feedback": {
                    "type": "string",
                    "description": "Feedback for the applicant"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Application status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Application status updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid status"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Scholarship or application not found"
          }
        }
      }
    },
    "/api/scholarships/{scholarshipId}/analytics": {
      "get": {
        "tags": ["jobs"],
        "summary": "Get scholarship analytics",
        "description": "Retrieve analytics for a specific scholarship (employer/admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "scholarshipId",
            "in": "path",
            "required": true,
            "description": "Scholarship ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalApplications": { "type": "integer" },
                        "pendingApplications": { "type": "integer" },
                        "acceptedApplications": { "type": "integer" },
                        "rejectedApplications": { "type": "integer" },
                        "shortlistedApplications": { "type": "integer" },
                        "statusCounts": {
                          "type": "object",
                          "additionalProperties": { "type": "integer" }
                        },
                        "isActive": { "type": "boolean" },
                        "applicationDeadline": { "type": "string", "format": "date-time" }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Scholarship not found"
          }
        }
      }
    },
    "/api/courses/{courseId}/enroll": {
      "post": {
        "tags": ["courses"],
        "summary": "Enroll in a course by ID",
        "description": "Enrolls the current user in the course with the specified ID.",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "description": "The ID of the course to enroll in",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Successfully enrolled in course" },
          "400": { "description": "Already enrolled or course not available" },
          "404": { "description": "Course not found" }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["courses"],
        "summary": "Unenroll from a course",
        "description": "Unenroll from a course",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "courseId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Unenrollment successful" },
          "400": { "description": "Bad request" },
          "404": { "description": "Course not found" }
        }
      }
    },
    "/api/courses/modules": {
      "get": {
        "tags": ["courses"],
        "summary": "Get all modules",
        "description": "Retrieve a list of all modules",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of modules per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            }
          },
          {
            "name": "course",
            "in": "query",
            "description": "Filter by course ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search term",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modules retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "modules": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Module"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "integer"
                            },
                            "limit": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            },
                            "pages": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["courses"],
        "summary": "Create a module",
        "description": "Create a new module (instructor/admin only)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["title", "description", "courseId", "content_type", "duration", "isMandatory", "order"],
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "courseId": { "type": "string" },
                  "content_type": {
                    "type": "string",
                    "enum": ["video", "assignment", "links", "audio", "pdf", "interactive content", "quiz", "text content"],
                    "description": "Primary content type for this module."
                  },
                  "content_text": {
                    "type": "string",
                    "description": "Text content for the module (use if content_type is 'text content')."
                  },
                  "content_file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Upload a file for the module (use if content_type is 'pdf', 'video', etc.)."
                  },
                  "duration": { "type": "string", "description": "Estimated module duration (e.g., '30 minutes', '2 hours')." },
                  "isMandatory": { "type": "boolean", "description": "Is this module mandatory? (true/false)" },
                  "order": { "type": "integer", "description": "Module order in the course (e.g., 1, 2, 3, ...)" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Module created successfully" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/api/courses/modules/{moduleId}": {
      "get": {
        "tags": ["courses"],
        "summary": "Get module by ID",
        "description": "Retrieve a specific module by its ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "moduleId",
            "in": "path",
            "required": true,
            "description": "Module ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Module retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "module": {
                          "$ref": "#/components/schemas/Module"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Module not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["courses"],
        "summary": "Update module",
        "description": "Update a module by its ID (instructor/admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "moduleId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["title", "description", "courseId", "content_type", "duration", "isMandatory", "order"],
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "courseId": { "type": "string" },
                  "content_type": {
                    "type": "string",
                    "enum": ["video", "assignment", "links", "audio", "pdf", "interactive content", "quiz", "text content"],
                    "description": "Primary content type for this module."
                  },
                  "content_text": {
                    "type": "string",
                    "description": "Text content for the module (use if content_type is 'text content')."
                  },
                  "content_file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Upload a file for the module (use if content_type is 'pdf', 'video', etc.)."
                  },
                  "duration": { "type": "string", "description": "Estimated module duration (e.g., '30 minutes', '2 hours')." },
                  "isMandatory": { "type": "boolean", "description": "Is this module mandatory? (true/false)" },
                  "order": { "type": "integer", "description": "Module order in the course (e.g., 1, 2, 3, ...)" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Module updated successfully" },
          "404": { "description": "Module not found" }
        }
      },
      "delete": {
        "tags": ["courses"],
        "summary": "Delete module",
        "description": "Delete a module by its ID (instructor/admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "moduleId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Module deleted successfully" },
          "404": { "description": "Module not found" }
        }
      }
    },
    "/api/courses/submissions": {
      "get": {
        "tags": ["courses"],
        "summary": "List all submissions",
        "description": "List all submissions (admin/instructor only, filter by user, course, or assignment)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "user", "in": "query", "schema": { "type": "string" }, "description": "Filter by user ID" },
          { "name": "course", "in": "query", "schema": { "type": "string" }, "description": "Filter by course ID" },
          { "name": "assignment", "in": "query", "schema": { "type": "string" }, "description": "Filter by assignment ID" }
        ],
        "responses": {
          "200": {
            "description": "Submissions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "submissions": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Submission" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/api/courses/certificates": {
      "get": {
        "tags": ["courses"],
        "summary": "List all certificates",
        "description": "List all certificates (admin/instructor only, filter by student, course, or status)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "student", "in": "query", "schema": { "type": "string" }, "description": "Filter by student ID" },
          { "name": "course", "in": "query", "schema": { "type": "string" }, "description": "Filter by course ID" },
          { "name": "status", "in": "query", "schema": { "type": "string", "enum": ["active", "expired", "revoked"] }, "description": "Filter by status" }
        ],
        "responses": {
          "200": {
            "description": "Certificates retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "certificates": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Certificate" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": { "description": "Forbidden" }
        }
      },
      "post": {
        "tags": ["courses"],
        "summary": "Create a certificate",
        "description": "Create a new certificate (instructor/admin only)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["student", "course", "title", "description", "completionDate"],
                "properties": {
                  "student": { "type": "string", "description": "Student ID" },
                  "course": { "type": "string", "description": "Course ID" },
                  "title": { "type": "string", "description": "Certificate title" },
                  "description": { "type": "string", "description": "Certificate description" },
                  "completionDate": { "type": "string", "format": "date-time", "description": "Certificate completion date" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Certificate created successfully" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/api/courses/certificates/{certificateId}": {
      "get": {
        "tags": ["courses"],
        "summary": "Get certificate by ID",
        "description": "Get a certificate by its ID (only user, admin, or instructor)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "certificateId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Certificate retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "certificate": { "$ref": "#/components/schemas/Certificate" }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": { "description": "Forbidden" },
          "404": { "description": "Certificate not found" }
        }
      },
      "patch": {
        "tags": ["courses"],
        "summary": "Update certificate",
        "description": "Update a certificate (only admin or instructor)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "certificateId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["student", "course", "title", "description", "completionDate", "status"],
                "properties": {
                  "student": { "type": "string", "description": "Student ID" },
                  "course": { "type": "string", "description": "Course ID" },
                  "title": { "type": "string", "description": "Certificate title" },
                  "description": { "type": "string", "description": "Certificate description" },
                  "completionDate": { "type": "string", "format": "date-time", "description": "Certificate completion date" },
                  "status": { "type": "string", "description": "Certificate status" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Certificate updated successfully" },
          "404": { "description": "Certificate not found" }
        }
      },
      "delete": {
        "tags": ["courses"],
        "summary": "Delete certificate",
        "description": "Delete a certificate (only admin or instructor)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "certificateId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Certificate deleted successfully" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Certificate not found" }
        }
      }
    },
    "/api/admin/dashboard": {
      "get": {
        "tags": ["auth"],
        "summary": "Admin dashboard stats",
        "description": "Get comprehensive platform statistics for admin dashboard",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "Time period in days for analytics (default: 30)",
            "schema": {
              "type": "string",
              "default": "30"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard stats retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "overview": {
                          "type": "object",
                          "properties": {
                            "users": {
                              "type": "object",
                              "properties": {
                                "total": { "type": "integer" },
                                "new": { "type": "integer" },
                                "active": { "type": "integer" },
                                "byRole": { "type": "array" }
                              }
                            },
                            "courses": {
                              "type": "object",
                              "properties": {
                                "total": { "type": "integer" },
                                "published": { "type": "integer" },
                                "enrollments": { "type": "integer" }
                              }
                            },
                            "jobs": {
                              "type": "object",
                              "properties": {
                                "total": { "type": "integer" },
                                "active": { "type": "integer" },
                                "applications": { "type": "integer" }
                              }
                            },
                            "mentors": {
                              "type": "object",
                              "properties": {
                                "total": { "type": "integer" },
                                "active": { "type": "integer" },
                                "sessions": { "type": "integer" },
                                "completedSessions": { "type": "integer" }
                              }
                            }
                          }
                        },
                        "charts": {
                          "type": "object",
                          "properties": {
                            "userGrowth": { "type": "array" },
                            "platformActivity": { "type": "array" }
                          }
                        },
                        "recentActivity": {
                          "type": "object",
                          "properties": {
                            "users": { "type": "array" },
                            "courses": { "type": "array" },
                            "jobs": { "type": "array" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden - Admin access required" }
        }
      }
    },
    "/api/admin/analytics": {
      "get": {
        "tags": ["admin"],
        "summary": "Get admin analytics",
        "description": "Retrieve comprehensive analytics data for admin dashboard",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Analytics data retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "tags": ["admin"],
        "summary": "Get all users",
        "description": "Retrieve a list of all users with pagination and filtering",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer" } },
          { "name": "role", "in": "query", "schema": { "type": "string" } },
          { "name": "search", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Users retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/admin/users/{userId}": {
      "get": {
        "tags": ["admin"],
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by their ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "userId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "User retrieved successfully" },
          "404": { "description": "User not found" }
        }
      },
      "put": {
        "tags": ["admin"],
        "summary": "Update user",
        "description": "Update a user's information",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "userId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": { "type": "string" },
                  "lastName": { "type": "string" },
                  "email": { "type": "string" },
                  "role": { "type": "string" },
                  "isActive": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "User updated successfully" },
          "404": { "description": "User not found" }
        }
      },
      "delete": {
        "tags": ["admin"],
        "summary": "Delete user",
        "description": "Delete a user from the system",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "userId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "User deleted successfully" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/api/admin/courses": {
      "get": {
        "tags": ["admin"],
        "summary": "Get all courses",
        "description": "Retrieve a list of all courses with pagination and filtering",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } },
          { "name": "search", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Courses retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/admin/courses/{courseId}": {
      "get": {
        "tags": ["admin"],
        "summary": "Get course by ID",
        "description": "Retrieve a specific course by its ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "courseId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Course retrieved successfully" },
          "404": { "description": "Course not found" }
        }
      },
      "put": {
        "tags": ["admin"],
        "summary": "Update course",
        "description": "Update a course's information",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "courseId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "status": { "type": "string" },
                  "instructor": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Course updated successfully" },
          "404": { "description": "Course not found" }
        }
      },
      "delete": {
        "tags": ["admin"],
        "summary": "Delete course",
        "description": "Delete a course from the system",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "courseId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Course deleted successfully" },
          "404": { "description": "Course not found" }
        }
      }
    },
    "/api/admin/jobs": {
      "get": {
        "tags": ["admin"],
        "summary": "Get all jobs",
        "description": "Retrieve a list of all jobs with pagination and filtering",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } },
          { "name": "search", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Jobs retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/admin/jobs/{jobId}": {
      "put": {
        "tags": ["admin"],
        "summary": "Update job",
        "description": "Update a job's information",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "jobId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "status": { "type": "string" },
                  "employer": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Job updated successfully" },
          "404": { "description": "Job not found" }
        }
      }
    },
    "/api/admin/mentors": {
      "get": {
        "tags": ["admin"],
        "summary": "Get all mentors",
        "description": "Retrieve a list of all mentors with pagination and filtering",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } },
          { "name": "search", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Mentors retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/admin/mentors/{mentorId}": {
      "put": {
        "tags": ["admin"],
        "summary": "Update mentor",
        "description": "Update a mentor's information",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "mentorId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bio": { "type": "string" },
                  "specializations": { "type": "array", "items": { "type": "string" } },
                  "isActive": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Mentor updated successfully" },
          "404": { "description": "Mentor not found" }
        }
      }
    },
    "/api/admin/health": {
      "get": {
        "tags": ["admin"],
        "summary": "Get system health",
        "description": "Retrieve system health and status information",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "System health data retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/admin/statistics": {
      "get": {
        "tags": ["admin"],
        "summary": "Get system statistics",
        "description": "Retrieve comprehensive system statistics",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Statistics retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/instructor/dashboard": {
      "get": {
        "tags": ["courses"],
        "summary": "Instructor dashboard stats",
        "description": "Get course and student statistics for instructor dashboard",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "Time period in days for analytics (default: 30)",
            "schema": {
              "type": "string",
              "default": "30"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard stats retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "overview": {
                          "type": "object",
                          "properties": {
                            "courses": {
                              "type": "object",
                              "properties": {
                                "total": { "type": "integer" },
                                "published": { "type": "integer" },
                                "enrollments": { "type": "integer" }
                              }
                            },
                            "assessments": {
                              "type": "object",
                              "properties": {
                                "total": { "type": "integer" },
                                "published": { "type": "integer" },
                                "completed": { "type": "integer" }
                              }
                            },
                            "students": {
                              "type": "object",
                              "properties": {
                                "total": { "type": "integer" },
                                "pendingSubmissions": { "type": "integer" }
                              }
                            }
                          }
                        },
                        "charts": {
                          "type": "object",
                          "properties": {
                            "coursePerformance": { "type": "array" },
                            "monthlyEnrollments": { "type": "array" }
                          }
                        },
                        "recentActivity": {
                          "type": "object",
                          "properties": {
                            "courses": { "type": "array" },
                            "assessments": { "type": "array" }
                          }
                        },
                        "topStudents": { "type": "array" }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden - Instructor access required" }
        }
      }
    },
    "/api/instructor/courses": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get instructor courses",
        "description": "Retrieve courses created by the authenticated instructor",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Courses retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/instructor/assessments": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get instructor assessments",
        "description": "Retrieve assessments created by the authenticated instructor",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Assessments retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "tags": ["instructor"],
        "summary": "Create assessment",
        "description": "Create a new assessment",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "courseId": { "type": "string" },
                  "questions": { "type": "array" },
                  "timeLimit": { "type": "integer" },
                  "passingScore": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Assessment created successfully" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/api/instructor/assessments/{assessmentId}": {
      "put": {
        "tags": ["instructor"],
        "summary": "Update assessment",
        "description": "Update an existing assessment",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "assessmentId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "questions": { "type": "array" },
                  "timeLimit": { "type": "integer" },
                  "passingScore": { "type": "integer" },
                  "status": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Assessment updated successfully" },
          "404": { "description": "Assessment not found" }
        }
      },
      "delete": {
        "tags": ["instructor"],
        "summary": "Delete assessment",
        "description": "Delete an assessment",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "assessmentId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Assessment deleted successfully" },
          "404": { "description": "Assessment not found" }
        }
      }
    },
    "/api/instructor/assessments/{assessmentId}/submissions": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get assessment submissions",
        "description": "Retrieve submissions for a specific assessment",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "assessmentId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "page", "in": "query", "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Submissions retrieved successfully" },
          "404": { "description": "Assessment not found" }
        }
      }
    },
    "/api/instructor/assessments/{assessmentId}/submissions/{submissionId}/grade": {
      "put": {
        "tags": ["instructor"],
        "summary": "Grade assessment submission",
        "description": "Grade a specific assessment submission",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "assessmentId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "submissionId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "score": { "type": "number" },
                  "feedback": { "type": "string" },
                  "status": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Submission graded successfully" },
          "404": { "description": "Submission not found" }
        }
      }
    },
    "/api/instructor/courses/{courseId}/analytics": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get course analytics",
        "description": "Retrieve analytics for a specific course",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "courseId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Course analytics retrieved successfully" },
          "404": { "description": "Course not found" }
        }
      }
    },
    "/api/instructor/analytics": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get instructor analytics",
        "description": "Retrieve comprehensive analytics for the instructor",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Analytics retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/instructor/profile": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get instructor profile",
        "description": "Retrieve the profile of the authenticated instructor",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Profile retrieved successfully" },
          "404": { "description": "Profile not found" }
        }
      },
      "put": {
        "tags": ["instructor"],
        "summary": "Update instructor profile",
        "description": "Update the profile of the authenticated instructor",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bio": { "type": "string" },
                  "specializations": { "type": "array", "items": { "type": "string" } },
                  "experience": { "type": "number" },
                  "education": { "type": "array" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Profile updated successfully" },
          "404": { "description": "Profile not found" }
        }
      }
    },
    "/api/instructor/help-tickets": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get instructor help tickets",
        "description": "Retrieve help tickets assigned to the instructor",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Help tickets retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/instructor/help-tickets/{ticketId}/respond": {
      "post": {
        "tags": ["instructor"],
        "summary": "Respond to help ticket",
        "description": "Add a response to a help ticket",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "ticketId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "response": { "type": "string" },
                  "status": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Response added successfully" },
          "404": { "description": "Ticket not found" }
        }
      }
    },
    "/api/employer/dashboard": {
      "get": {
        "tags": ["jobs"],
        "summary": "Employer dashboard stats",
        "description": "Get job and application statistics for employer dashboard. Available to employers and admins only.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "Time period in days for analytics (default: 30)",
            "schema": {
              "type": "string",
              "default": "30"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard stats retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "overview": {
                          "type": "object",
                          "properties": {
                            "jobs": {
                              "type": "object",
                              "properties": {
                                "total": { "type": "integer" },
                                "active": { "type": "integer" },
                                "closed": { "type": "integer" },
                                "recent": { "type": "integer" }
                              }
                            },
                            "applications": {
                              "type": "object",
                              "properties": {
                                "total": { "type": "integer" },
                                "pending": { "type": "integer" },
                                "hired": { "type": "integer" }
                              }
                            },
                            "scholarships": {
                              "type": "object",
                              "properties": {
                                "total": { "type": "integer" },
                                "active": { "type": "integer" },
                                "applications": { "type": "integer" }
                              }
                            }
                          }
                        },
                        "charts": {
                          "type": "object",
                          "properties": {
                            "monthlyJobPostings": { "type": "array" },
                            "applicationTrends": { "type": "array" },
                            "applicationStatusDistribution": { "type": "array" }
                          }
                        },
                        "recentActivity": {
                          "type": "object",
                          "properties": {
                            "jobs": { "type": "array" },
                            "applications": { "type": "array" },
                            "scholarships": { "type": "array" }
                          }
                        },
                        "topJobs": { "type": "array" }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden - Employer access required" }
        }
      }
    },
    "/api/courses/instructor/courses": {
      "get": {
        "tags": ["courses"],
        "summary": "Get all courses for the authenticated instructor",
        "description": "Returns a paginated list of all courses for the currently authenticated instructor. Supports optional search.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "description": "Search term for course title, description, or overview",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number (default 1)",
            "schema": { "type": "integer", "default": 1 }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Number of courses per page (default 10)",
            "schema": { "type": "integer", "default": 10 }
          }
        ],
        "responses": {
          "200": { "description": "Courses retrieved successfully" },
          "401": { "description": "Unauthorized" }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/api/courses/{courseId}/assessments": {
      "get": {
        "tags": ["courses"],
        "summary": "List all assessments for a course",
        "description": "Retrieve all assessments for a specific course.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "courseId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "search", "in": "query", "schema": { "type": "string" }, "description": "Search term" },
          { "name": "page", "in": "query", "schema": { "type": "integer", "default": 1 } },
          { "name": "limit", "in": "query", "schema": { "type": "integer", "default": 10 } }
        ],
        "responses": {
          "200": {
            "description": "Assessments retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "assessments": { "type": "array", "items": { "$ref": "#/components/schemas/Assessment" } },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": { "type": "integer" },
                            "limit": { "type": "integer" },
                            "total": { "type": "integer" },
                            "pages": { "type": "integer" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["courses"],
        "summary": "Create an assessment for a course",
        "description": "Create a new assessment for a specific course (instructor/admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "courseId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["module", "title", "description", "assessment_type", "max_attempts", "passing_score", "duration", "is_active"],
                "properties": {
                  "module": { "type": "number" },
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "assessment_type": { "type": "string" },
                  "max_attempts": { "type": "number" },
                  "passing_score": { "type": "number" },
                  "duration": { "type": "number" },
                  "is_active": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Assessment created successfully" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/api/courses/{courseId}/assessments/{assessmentId}": {
      "get": {
        "tags": ["courses"],
        "summary": "Get assessment by ID for a course",
        "description": "Retrieve a specific assessment by its ID for a course.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "courseId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "assessmentId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Assessment retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "assessment": { "$ref": "#/components/schemas/Assessment" }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": { "description": "Assessment not found" }
        }
      },
      "put": {
        "tags": ["courses"],
        "summary": "Update assessment by ID for a course",
        "description": "Update an assessment by its ID for a course (instructor/admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "courseId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "assessmentId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "module": { "type": "number" },
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "assessment_type": { "type": "string" },
                  "max_attempts": { "type": "number" },
                  "passing_score": { "type": "number" },
                  "duration": { "type": "number" },
                  "is_active": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Assessment updated successfully" },
          "404": { "description": "Assessment not found" }
        }
      },
      "delete": {
        "tags": ["courses"],
        "summary": "Delete assessment by ID for a course",
        "description": "Delete an assessment by its ID for a course (instructor/admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "courseId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "assessmentId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Assessment deleted successfully" },
          "404": { "description": "Assessment not found" }
        }
      }
    },
    "/api/courses/user-assessments": {},
    "/api/courses/user-progress": {
      "get": {
        "tags": ["courses"],
        "summary": "List all user progress",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of user progress" }
        }
      },
      "post": {
        "tags": ["courses"],
        "summary": "Create user progress",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["user_id", "course_id", "module_id", "progress_percentage", "is_active", "completed"],
                "properties": {
                  "user_id": { "type": ["string", "number"] },
                  "course_id": { "type": ["string", "number"] },
                  "module_id": { "type": ["string", "number"] },
                  "progress_percentage": { "type": "number" },
                  "is_active": { "type": "boolean" },
                  "completed": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User progress created" }
        }
      }
    },
    "/api/courses/user-progress/{userProgressId}": {
      "get": {
        "tags": ["courses"],
        "summary": "Get user progress by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "userProgressId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "User progress found" },
          "404": { "description": "Not found" }
        }
      },
      "patch": {
        "tags": ["courses"],
        "summary": "Update user progress",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "userProgressId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "user_id",
                  "course_id",
                  "module_id",
                  "progress_percentage",
                  "is_active",
                  "completed"
                ],
                "properties": {
                  "user_id": { "type": ["string", "number"] },
                  "course_id": { "type": ["string", "number"] },
                  "module_id": { "type": ["string", "number"] },
                  "progress_percentage": { "type": "number" },
                  "is_active": { "type": "boolean" },
                  "completed": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User progress updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "userProgress": {
                          "type": "object",
                          "properties": {
                            "user_id": { "type": ["string", "number"] },
                            "course_id": { "type": ["string", "number"] },
                            "module_id": { "type": ["string", "number"] },
                            "progress_percentage": { "type": "number" },
                            "is_active": { "type": "boolean" },
                            "completed": { "type": "boolean" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": { "description": "Not found" }
        }
      },
      "delete": {
        "tags": ["courses"],
        "summary": "Delete user progress",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "userProgressId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "User progress deleted" },
          "404": { "description": "Not found" }
        }
      }
    },
    "/api/courses/questions": {
      "get": {
        "tags": ["courses"],
        "summary": "List all questions",
        "description": "Get all questions (optionally filter by course or module).",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "course", "in": "query", "schema": { "type": "string" } },
          { "name": "module", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Questions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "questions": { "type": "array", "items": { "$ref": "#/components/schemas/Question" } }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["courses"],
        "summary": "Create a question",
        "description": "Create a new question (instructor/admin only).",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["assessment", "course", "module", "question", "question_type", "options", "correct_answer", "points", "order"],
                "properties": {
                  "assessment": { "type": "integer" },
                  "course": { "type": "string" },
                  "module": { "type": "string" },
                  "question": { "type": "string" },
                  "question_type": { "type": "string" },
                  "options": { "type": "array", "items": { "type": "string" } },
                  "correct_answer": { "type": "string" },
                  "points": { "type": "integer" },
                  "order": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Question created" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/api/courses/questions/{questionId}": {
      "get": {
        "tags": ["courses"],
        "summary": "Get question by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "questionId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Question found" },
          "404": { "description": "Not found" }
        }
      },
      "patch": {
        "tags": ["courses"],
        "summary": "Update question",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "questionId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assessment": { "type": "integer" },
                  "course": { "type": "string" },
                  "module": { "type": "string" },
                  "question": { "type": "string" },
                  "question_type": { "type": "string" },
                  "options": { "type": "array", "items": { "type": "string" } },
                  "correct_answer": { "type": "string" },
                  "points": { "type": "integer" },
                  "order": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Question updated" },
          "404": { "description": "Not found" }
        }
      },
      "delete": {
        "tags": ["courses"],
        "summary": "Delete question",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "questionId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Question deleted" },
          "404": { "description": "Not found" }
        }
      }
    },
    "/api/courses/discussions": {
      "get": {
        "tags": ["courses"],
        "summary": "List all discussions",
        "description": "Get all discussions (optionally filter by course).",
        "parameters": [
          { "name": "course", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Discussions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "discussions": { "type": "array", "items": { "$ref": "#/components/schemas/Discussion" } }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["courses"],
        "summary": "Create a discussion",
        "description": "Create a new discussion (authenticated users).",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["course", "title", "content", "author"],
                "properties": {
                  "course": { "type": "string" },
                  "title": { "type": "string" },
                  "content": { "type": "string" },
                  "author": { "type": "string" },
                  "status": { "type": "string", "default": "submitted" }
                }
              },
              "example": {
                "course": "string",
                "title": "string",
                "content": "string",
                "author": "string",
                "status": "submitted"
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Discussion created" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/api/courses/discussions/{discussionId}": {
      "get": {
        "tags": ["courses"],
        "summary": "Get discussion by ID",
        "parameters": [
          { "name": "discussionId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Discussion found" },
          "404": { "description": "Not found" }
        }
      },
      "patch": {
        "tags": ["courses"],
        "summary": "Update discussion",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "discussionId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "course": { "type": "string" },
                  "title": { "type": "string" },
                  "content": { "type": "string" },
                  "author": { "type": "string" },
                  "status": { "type": "string" }
                }
              },
              "example": {
                "course": "string",
                "title": "string",
                "content": "string",
                "author": "string",
                "status": "submitted"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Discussion updated" },
          "404": { "description": "Not found" }
        }
      },
      "delete": {
        "tags": ["courses"],
        "summary": "Delete discussion",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "discussionId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Discussion deleted" },
          "404": { "description": "Not found" }
        }
      }
    },
    "/api/courses/recommended": {
      "get": {
        "tags": ["courses"],
        "summary": "Get recommended courses",
        "description": "Returns a list of recommended courses (top 5 most recently created published courses).",
        "responses": {
          "200": {
            "description": "Recommended courses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "recommended": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Course" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/courses/user/{userId}/stats": {
      "get": {
        "tags": ["courses"],
        "summary": "Get user stats",
        "description": "Returns stats for a user (enrolled courses, completed courses, average score).",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "userId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "User stats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "enrolledCourses": { "type": "integer" },
                        "completedCourses": { "type": "integer" },
                        "averageScore": { "type": "number" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/courses/{courseId}/progress": {
      "get": {
        "tags": ["courses"],
        "summary": "Get user's course progress",
        "description": "Returns the progress of the authenticated user in the specified course.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "courseId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "User's course progress",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "progress": { "type": "array", "items": { "type": "object" } },
                        "totalModules": { "type": "integer" },
                        "completedModules": { "type": "integer" },
                        "progressPercentage": { "type": "number" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/help/tickets": {
      "get": {
        "tags": ["Help Tickets"],
        "summary": "List all help tickets (with filters)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "status", "in": "query", "schema": { "type": "string" } },
          { "name": "assignedTo", "in": "query", "schema": { "type": "string" } },
          { "name": "search", "in": "query", "schema": { "type": "string" } },
          { "name": "category", "in": "query", "schema": { "type": "string" } },
          { "name": "course", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "List of help tickets",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HelpTicketsListResponse" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Help Tickets"],
        "summary": "Create a help ticket",
        "description": "Create a new help ticket with form fields and file uploads",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": { "$ref": "#/components/schemas/HelpTicketCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Help ticket created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HelpTicketResponse" }
              }
            }
          }
        }
      }
    },
    "/api/help/tickets/{ticketId}": {
      "get": {
        "tags": ["Help Tickets"],
        "summary": "Get a help ticket by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "ticketId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Help ticket details",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HelpTicketResponse" }
              }
            }
          },
          "404": { "description": "Ticket not found" }
        }
      },
      "patch": {
        "tags": ["Help Tickets"],
        "summary": "Update a help ticket (only creator, assignedTo, or admin)",
        "description": "Update a help ticket with form fields and file uploads",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "ticketId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": { "$ref": "#/components/schemas/HelpTicketUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Help ticket updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HelpTicketResponse" }
              }
            }
          },
          "403": { "description": "Not authorized" },
          "404": { "description": "Ticket not found" }
        }
      },
      "delete": {
        "tags": ["Help Tickets"],
        "summary": "Delete a help ticket (only creator, assignedTo, or admin)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "ticketId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Help ticket deleted" },
          "403": { "description": "Not authorized" },
          "404": { "description": "Ticket not found" }
        }
      }
    },
    "/api/instructor/courses": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get instructor courses",
        "description": "Retrieve courses created by the authenticated instructor",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Courses retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/instructor/assessments": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get instructor assessments",
        "description": "Retrieve assessments created by the authenticated instructor",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Assessments retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "tags": ["instructor"],
        "summary": "Create assessment",
        "description": "Create a new assessment",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "courseId": { "type": "string" },
                  "questions": { "type": "array" },
                  "timeLimit": { "type": "integer" },
                  "passingScore": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Assessment created successfully" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/api/instructor/assessments/{assessmentId}": {
      "put": {
        "tags": ["instructor"],
        "summary": "Update assessment",
        "description": "Update an existing assessment",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "assessmentId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "questions": { "type": "array" },
                  "timeLimit": { "type": "integer" },
                  "passingScore": { "type": "integer" },
                  "status": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Assessment updated successfully" },
          "404": { "description": "Assessment not found" }
        }
      },
      "delete": {
        "tags": ["instructor"],
        "summary": "Delete assessment",
        "description": "Delete an assessment",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "assessmentId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Assessment deleted successfully" },
          "404": { "description": "Assessment not found" }
        }
      }
    },
    "/api/instructor/assessments/{assessmentId}/submissions": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get assessment submissions",
        "description": "Retrieve submissions for a specific assessment",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "assessmentId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "page", "in": "query", "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Submissions retrieved successfully" },
          "404": { "description": "Assessment not found" }
        }
      }
    },
    "/api/instructor/assessments/{assessmentId}/submissions/{submissionId}/grade": {
      "put": {
        "tags": ["instructor"],
        "summary": "Grade assessment submission",
        "description": "Grade a specific assessment submission",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "assessmentId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "submissionId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "score": { "type": "number" },
                  "feedback": { "type": "string" },
                  "status": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Submission graded successfully" },
          "404": { "description": "Submission not found" }
        }
      }
    },
    "/api/instructor/courses/{courseId}/analytics": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get course analytics",
        "description": "Retrieve analytics for a specific course",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "courseId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Course analytics retrieved successfully" },
          "404": { "description": "Course not found" }
        }
      }
    },
    "/api/instructor/analytics": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get instructor analytics",
        "description": "Retrieve comprehensive analytics for the instructor",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Analytics retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/instructor/profile": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get instructor profile",
        "description": "Retrieve the profile of the authenticated instructor",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Profile retrieved successfully" },
          "404": { "description": "Profile not found" }
        }
      },
      "put": {
        "tags": ["instructor"],
        "summary": "Update instructor profile",
        "description": "Update the profile of the authenticated instructor",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bio": { "type": "string" },
                  "specializations": { "type": "array", "items": { "type": "string" } },
                  "experience": { "type": "number" },
                  "education": { "type": "array" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Profile updated successfully" },
          "404": { "description": "Profile not found" }
        }
      }
    },
    "/api/instructor/help-tickets": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get instructor help tickets",
        "description": "Retrieve help tickets assigned to the instructor",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Help tickets retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/instructor/help-tickets/{ticketId}/respond": {
      "post": {
        "tags": ["instructor"],
        "summary": "Respond to help ticket",
        "description": "Add a response to a help ticket",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "ticketId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "response": { "type": "string" },
                  "status": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Response added successfully" },
          "404": { "description": "Ticket not found" }
        }
      }
    },
    "/api/employer/jobs/employer": {
      "get": {
        "tags": ["employer"],
        "summary": "Get employer jobs",
        "description": "Retrieve jobs posted by the authenticated employer",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Jobs retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/employer/jobs": {
      "post": {
        "tags": ["employer"],
        "summary": "Create job",
        "description": "Create a new job posting",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "requirements": { "type": "array" },
                  "salary": { "type": "number" },
                  "location": { "type": "string" },
                  "type": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Job created successfully" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/api/employer/jobs/{jobId}": {
      "put": {
        "tags": ["employer"],
        "summary": "Update job",
        "description": "Update an existing job posting",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "jobId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "requirements": { "type": "array" },
                  "salary": { "type": "number" },
                  "location": { "type": "string" },
                  "type": { "type": "string" },
                  "status": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Job updated successfully" },
          "404": { "description": "Job not found" }
        }
      },
      "delete": {
        "tags": ["employer"],
        "summary": "Delete job",
        "description": "Delete a job posting",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "jobId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Job deleted successfully" },
          "404": { "description": "Job not found" }
        }
      }
    },
    "/api/employer/jobs/{jobId}/applications": {
      "get": {
        "tags": ["employer"],
        "summary": "Get job applications",
        "description": "Retrieve applications for a specific job",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "jobId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "page", "in": "query", "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Applications retrieved successfully" },
          "404": { "description": "Job not found" }
        }
      }
    },
    "/api/employer/jobs/{jobId}/applications/{applicationId}": {
      "put": {
        "tags": ["employer"],
        "summary": "Update job application status",
        "description": "Update the status of a job application",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "jobId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "applicationId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string" },
                  "feedback": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Application status updated successfully" },
          "404": { "description": "Application not found" }
        }
      }
    },
    "/api/employer/scholarships/employer": {
      "get": {
        "tags": ["employer"],
        "summary": "Get employer scholarships",
        "description": "Retrieve scholarships posted by the authenticated employer",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Scholarships retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/employer/scholarships": {
      "post": {
        "tags": ["employer"],
        "summary": "Create scholarship",
        "description": "Create a new scholarship",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "amount": { "type": "number" },
                  "requirements": { "type": "array" },
                  "deadline": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Scholarship created successfully" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/api/employer/scholarships/{scholarshipId}": {
      "put": {
        "tags": ["employer"],
        "summary": "Update scholarship",
        "description": "Update an existing scholarship",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "scholarshipId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "amount": { "type": "number" },
                  "requirements": { "type": "array" },
                  "deadline": { "type": "string" },
                  "status": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Scholarship updated successfully" },
          "404": { "description": "Scholarship not found" }
        }
      },
      "delete": {
        "tags": ["employer"],
        "summary": "Delete scholarship",
        "description": "Delete a scholarship",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "scholarshipId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Scholarship deleted successfully" },
          "404": { "description": "Scholarship not found" }
        }
      }
    },
    "/api/employer/scholarships/{scholarshipId}/applications": {
      "get": {
        "tags": ["employer"],
        "summary": "Get scholarship applications",
        "description": "Retrieve applications for a specific scholarship",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "scholarshipId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "page", "in": "query", "schema": { "type": "integer" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer" } },
          { "name": "status", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Applications retrieved successfully" },
          "404": { "description": "Scholarship not found" }
        }
      }
    },
    "/api/employer/scholarships/{scholarshipId}/applications/{applicationId}": {
      "put": {
        "tags": ["employer"],
        "summary": "Update scholarship application status",
        "description": "Update the status of a scholarship application",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "scholarshipId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "applicationId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string" },
                  "feedback": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Application status updated successfully" },
          "404": { "description": "Application not found" }
        }
      }
    },
    "/api/employer/analytics": {
      "get": {
        "tags": ["employer"],
        "summary": "Get employer analytics",
        "description": "Retrieve analytics for the employer",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Analytics retrieved successfully" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/employer/profile": {
      "get": {
        "tags": ["employer"],
        "summary": "Get employer profile",
        "description": "Retrieve the profile of the authenticated employer",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Profile retrieved successfully" },
          "404": { "description": "Profile not found" }
        }
      }
    },
    "/api/courses/learning-path": {
      "get": {
        "tags": ["courses"],
        "summary": "Get user's learning path",
        "description": "Retrieve the user's personalized learning path based on enrolled courses",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Learning path retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "learningPath": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": { "type": "string" },
                              "title": { "type": "string" },
                              "description": { "type": "string" },
                              "progress": { "type": "number" },
                              "completed": { "type": "boolean" },
                              "duration": { "type": "string" },
                              "level": { "type": "string" },
                              "courseId": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/courses/recommendations": {
      "get": {
        "tags": ["courses"],
        "summary": "Get course recommendations",
        "description": "Retrieve personalized course recommendations for the user",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Recommendations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "recommendations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": { "type": "string" },
                              "title": { "type": "string" },
                              "description": { "type": "string" },
                              "level": { "type": "string" },
                              "duration": { "type": "string" },
                              "category": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/peer-learning/groups/{groupId}/comments": {
      "post": {
        "tags": ["peer-learning"],
        "summary": "Add comment to group",
        "description": "Add a new comment to a peer learning group",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "groupId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["text"],
                "properties": {
                  "text": { "type": "string", "minLength": 1, "maxLength": 1000 }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Comment added successfully" },
          "400": { "description": "Invalid input data" }
        }
      }
    },
    "/api/peer-learning/groups/{groupId}/comments/{commentId}/replies": {
      "post": {
        "tags": ["peer-learning"],
        "summary": "Add reply to comment",
        "description": "Add a reply to a specific comment in a peer learning group",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "groupId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "commentId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["text"],
                "properties": {
                  "text": { "type": "string", "minLength": 1, "maxLength": 1000 }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Reply added successfully" },
          "400": { "description": "Invalid input data" }
        }
      }
    }
  }
}